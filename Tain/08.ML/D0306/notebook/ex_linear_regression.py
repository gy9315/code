from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error
import matplotlib.pyplot as plt
import koreanize_matplotlib
import numpy as np
# 기계학습 알고리즘을 python언어로 구현되어 있음
# 사용법이 모든 알고리즘 동일
#  * 알고리즘 객체/인스턴스 생성
#  * 학습 -> 알고리즘 객체 변수명.fit(2D_DATA, 1D_Target)
#  * 평가 -> 알고리즘 객체 변수명.score(2D_DATA, 1D_예측값)
#  * 예측 -> 알고리즘 객체 변수명.predict(2D_DATA) -> 1D_예측값 반환
# - 성능평가
#   * 분류/회귀 함수 => 함수명(1D_정담, 1D_예측값) 

# =================================================================
# 공부시간에 따른 점수 DATA_SET을 임의로 작성
hour=[[2],[4],[5],[7],[8],[9]]
score=[30,45,67,74,79,88]
# =================================================================
plt.plot(hour,score,'-')
# plt.show()
# =================================================================
# 학습 종류: 지도학습 -> 데이터 + 타겟/회귀로 수치 예측
# 학습 알고리즘: 데이터 분포가 선형을 띄고 있어서 선형회귀로 진행
lr=LinearRegression()
# =================================================================
lr.fit(hour,score)
# =================================================================
print(f'coef_: {lr.coef_}]\nintercept_: {lr.intercept_}]')
# =================================================================
# 모델 성능평가 => 검증데이터
print(lr.score(hour,score))
# 손실계산
# =================================================================
# 예측 서비스
#   - 웹 또는 앱에 포함됨 모델에서 예측 서비스 진행
#   - 예측 method: 알고리즘 객체 변수명.predict(2D_DATA)-> 1D 예측값  
#       ★ 전제 조건: 학습 시 전행됨 데이터 전처리 과정을 거친 2D_DATA 전달